# ===========================================
# üîê Configurazione 42 OAuth
# ===========================================
# Vai su https://profile.intra.42.fr/oauth/applications/new per creare un'app
# Redirect URI Development: http://localhost:5000/callback
# Redirect URI Production: https://tuodominio.com/callback

CLIENT_ID=
CLIENT_SECRET=
SECRET_KEY=genera-una-chiave-casuale-con-python-secrets

# ===========================================
# üëë Admin Configuration
# ===========================================
# NOTA: Solo gli utenti con staff? = True dall'API 42 saranno admin

# ===========================================
# üåê URL OAuth 42
# ===========================================
OAUTH_AUTHORIZE_URL=https://api.intra.42.fr/oauth/authorize
OAUTH_TOKEN_URL=https://api.intra.42.fr/oauth/token
OAUTH_API_BASE_URL=https://api.intra.42.fr/v2/

# ===========================================
# üì° CORS per Socket.IO (Real-time updates)
# ===========================================
# Development: usa "*" per permettere tutte le origini
CORS_ORIGINS=*

# Production: specifica il tuo dominio esatto
# CORS_ORIGINS=https://tuodominio.com
# CORS_ORIGINS=https://tuodominio.com,https://www.tuodominio.com

# ===========================================
# üíæ Database
# ===========================================
# Database directory (for Docker volume)
DB_DIR=/app/calendar_data

# ===========================================
# ÔøΩ Push Notifications (Web Push / VAPID)
# ===========================================
# Generate VAPID keys with: python -c "from pywebpush import webpush; print(webpush.generate_vapid_keys())"
# Or use: https://web-push-codelab.glitch.me/
VAPID_PUBLIC_KEY=seesso
VAPID_PRIVATE_KEY=seesso
VAPID_EMAIL=mailto:lamici@student.42firenze.it

# ===========================================
# ÔøΩüîÑ Webhook Configuration
# ===========================================
# URL del deployer interno (non modificare in produzione)
DEPLOYER_URL=http://webhook_listener:9000/webhook

# Secret per validare le richieste webhook (opzionale ma consigliato)
# Genera con: python -c "import secrets; print(secrets.token_hex(32))"
# WEBHOOK_SECRET=
